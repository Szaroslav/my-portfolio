/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={411:(e,t,n)=>{e.exports=function e(t,n,i){function r(s,a){if(!n[s]){if(!t[s]){if(o)return o(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var u=n[s]={exports:{}};t[s][0].call(u.exports,(function(e){return r(t[s][1][e]||e)}),u,u.exports,e,t,n,i)}return n[s].exports}for(var o=void 0,s=0;s<i.length;s++)r(i[s]);return r}({1:[function(e,t,n){"use strict";var i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function s(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}t.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(e){i[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=s(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))r.call(n,c)&&(l[c]=n[c]);if(i){a=i(n);for(var h=0;h<a.length;h++)o.call(n,a[h])&&(l[a[h]]=n[a[h]])}}return l}},{}],2:[function(e,t,n){(function(e){(function(){var n,i,r,o,s,a;"undefined"!=typeof performance&&null!==performance&&performance.now?t.exports=function(){return performance.now()}:null!=e&&e.hrtime?(t.exports=function(){return(n()-s)/1e6},i=e.hrtime,o=(n=function(){var e;return 1e9*(e=i())[0]+e[1]})(),a=1e9*e.uptime(),s=o-a):Date.now?(t.exports=function(){return Date.now()-r},r=Date.now()):(t.exports=function(){return(new Date).getTime()-r},r=(new Date).getTime())}).call(this)}).call(this,e("_process"))},{_process:3}],3:[function(e,t,n){var i,r,o=t.exports={};function s(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function l(e){if(i===setTimeout)return setTimeout(e,0);if((i===s||!i)&&setTimeout)return i=setTimeout,setTimeout(e,0);try{return i(e,0)}catch(t){try{return i.call(null,e,0)}catch(t){return i.call(this,e,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:s}catch(e){i=s}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var u,c=[],h=!1,d=-1;function p(){h&&u&&(h=!1,u.length?c=u.concat(c):d=-1,c.length&&f())}function f(){if(!h){var e=l(p);h=!0;for(var t=c.length;t;){for(u=c,c=[];++d<t;)u&&u[d].run();d=-1,t=c.length}u=null,h=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function v(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new m(e,t)),1!==c.length||h||l(f)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},{}],4:[function(e,t,i){(function(n){for(var i=e("performance-now"),r="undefined"==typeof window?n:window,o=["moz","webkit"],s="AnimationFrame",a=r["request"+s],l=r["cancel"+s]||r["cancelRequest"+s],u=0;!a&&u<o.length;u++)a=r[o[u]+"Request"+s],l=r[o[u]+"Cancel"+s]||r[o[u]+"CancelRequest"+s];if(!a||!l){var c=0,h=0,d=[];a=function(e){if(0===d.length){var t=i(),n=Math.max(0,16.666666666666668-(t-c));c=n+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(c)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(n))}return d.push({handle:++h,callback:e,cancelled:!1}),h},l=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}t.exports=function(e){return a.call(r,e)},t.exports.cancel=function(){l.apply(r,arguments)},t.exports.polyfill=function(){r.requestAnimationFrame=a,r.cancelAnimationFrame=l}}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"performance-now":2}],5:[function(e,t,n){"use strict";var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var r=e("raf"),o=e("object-assign"),s={propertyCache:{},vendors:[null,["-webkit-","webkit"],["-moz-","Moz"],["-o-","O"],["-ms-","ms"]],clamp:function(e,t,n){return t<n?e<t?t:e>n?n:e:e<n?n:e>t?t:e},data:function(e,t){return s.deserialize(e.getAttribute("data-"+t))},deserialize:function(e){return"true"===e||"false"!==e&&("null"===e?null:!isNaN(parseFloat(e))&&isFinite(e)?parseFloat(e):e)},camelCase:function(e){return e.replace(/-+(.)?/g,(function(e,t){return t?t.toUpperCase():""}))},accelerate:function(e){s.css(e,"transform","translate3d(0,0,0) rotate(0.0001deg)"),s.css(e,"transform-style","preserve-3d"),s.css(e,"backface-visibility","hidden")},transformSupport:function(e){for(var t=document.createElement("div"),n=!1,i=null,r=!1,o=null,a=null,l=0,u=s.vendors.length;l<u;l++)if(null!==s.vendors[l]?(o=s.vendors[l][0]+"transform",a=s.vendors[l][1]+"Transform"):(o="transform",a="transform"),void 0!==t.style[a]){n=!0;break}switch(e){case"2D":r=n;break;case"3D":if(n){var c=document.body||document.createElement("body"),h=document.documentElement,d=h.style.overflow,p=!1;document.body||(p=!0,h.style.overflow="hidden",h.appendChild(c),c.style.overflow="hidden",c.style.background=""),c.appendChild(t),t.style[a]="translate3d(1px,1px,1px)",r=void 0!==(i=window.getComputedStyle(t).getPropertyValue(o))&&i.length>0&&"none"!==i,h.style.overflow=d,c.removeChild(t),p&&(c.removeAttribute("style"),c.parentNode.removeChild(c))}}return r},css:function(e,t,n){var i=s.propertyCache[t];if(!i)for(var r=0,o=s.vendors.length;r<o;r++)if(i=null!==s.vendors[r]?s.camelCase(s.vendors[r][1]+"-"+t):t,void 0!==e.style[i]){s.propertyCache[t]=i;break}e.style[i]=n}},a={relativeInput:!1,clipRelativeInput:!1,inputElement:null,hoverOnly:!1,calibrationThreshold:100,calibrationDelay:500,supportDelay:500,calibrateX:!1,calibrateY:!0,invertX:!0,invertY:!0,limitX:!1,limitY:!1,scalarX:10,scalarY:10,frictionX:.1,frictionY:.1,originX:.5,originY:.5,pointerEvents:!1,precision:1,onReady:null,selector:null},l=function(){function e(t,n){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.element=t;var i={calibrateX:s.data(this.element,"calibrate-x"),calibrateY:s.data(this.element,"calibrate-y"),invertX:s.data(this.element,"invert-x"),invertY:s.data(this.element,"invert-y"),limitX:s.data(this.element,"limit-x"),limitY:s.data(this.element,"limit-y"),scalarX:s.data(this.element,"scalar-x"),scalarY:s.data(this.element,"scalar-y"),frictionX:s.data(this.element,"friction-x"),frictionY:s.data(this.element,"friction-y"),originX:s.data(this.element,"origin-x"),originY:s.data(this.element,"origin-y"),pointerEvents:s.data(this.element,"pointer-events"),precision:s.data(this.element,"precision"),relativeInput:s.data(this.element,"relative-input"),clipRelativeInput:s.data(this.element,"clip-relative-input"),hoverOnly:s.data(this.element,"hover-only"),inputElement:document.querySelector(s.data(this.element,"input-element")),selector:s.data(this.element,"selector")};for(var r in i)null===i[r]&&delete i[r];o(this,a,i,n),this.inputElement||(this.inputElement=this.element),this.calibrationTimer=null,this.calibrationFlag=!0,this.enabled=!1,this.depthsX=[],this.depthsY=[],this.raf=null,this.bounds=null,this.elementPositionX=0,this.elementPositionY=0,this.elementWidth=0,this.elementHeight=0,this.elementCenterX=0,this.elementCenterY=0,this.elementRangeX=0,this.elementRangeY=0,this.calibrationX=0,this.calibrationY=0,this.inputX=0,this.inputY=0,this.motionX=0,this.motionY=0,this.velocityX=0,this.velocityY=0,this.onMouseMove=this.onMouseMove.bind(this),this.onDeviceOrientation=this.onDeviceOrientation.bind(this),this.onDeviceMotion=this.onDeviceMotion.bind(this),this.onOrientationTimer=this.onOrientationTimer.bind(this),this.onMotionTimer=this.onMotionTimer.bind(this),this.onCalibrationTimer=this.onCalibrationTimer.bind(this),this.onAnimationFrame=this.onAnimationFrame.bind(this),this.onWindowResize=this.onWindowResize.bind(this),this.windowWidth=null,this.windowHeight=null,this.windowCenterX=null,this.windowCenterY=null,this.windowRadiusX=null,this.windowRadiusY=null,this.portrait=!1,this.desktop=!navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|BB10|mobi|tablet|opera mini|nexus 7)/i),this.motionSupport=!!window.DeviceMotionEvent&&!this.desktop,this.orientationSupport=!!window.DeviceOrientationEvent&&!this.desktop,this.orientationStatus=0,this.motionStatus=0,this.initialise()}return i(e,[{key:"initialise",value:function(){void 0===this.transform2DSupport&&(this.transform2DSupport=s.transformSupport("2D"),this.transform3DSupport=s.transformSupport("3D")),this.transform3DSupport&&s.accelerate(this.element),"static"===window.getComputedStyle(this.element).getPropertyValue("position")&&(this.element.style.position="relative"),this.pointerEvents||(this.element.style.pointerEvents="none"),this.updateLayers(),this.updateDimensions(),this.enable(),this.queueCalibration(this.calibrationDelay)}},{key:"doReadyCallback",value:function(){this.onReady&&this.onReady()}},{key:"updateLayers",value:function(){this.selector?this.layers=this.element.querySelectorAll(this.selector):this.layers=this.element.children,this.layers.length||console.warn("ParallaxJS: Your scene does not have any layers."),this.depthsX=[],this.depthsY=[];for(var e=0;e<this.layers.length;e++){var t=this.layers[e];this.transform3DSupport&&s.accelerate(t),t.style.position=e?"absolute":"relative",t.style.display="block",t.style.left=0,t.style.top=0;var n=s.data(t,"depth")||0;this.depthsX.push(s.data(t,"depth-x")||n),this.depthsY.push(s.data(t,"depth-y")||n)}}},{key:"updateDimensions",value:function(){this.windowWidth=window.innerWidth,this.windowHeight=window.innerHeight,this.windowCenterX=this.windowWidth*this.originX,this.windowCenterY=this.windowHeight*this.originY,this.windowRadiusX=Math.max(this.windowCenterX,this.windowWidth-this.windowCenterX),this.windowRadiusY=Math.max(this.windowCenterY,this.windowHeight-this.windowCenterY)}},{key:"updateBounds",value:function(){this.bounds=this.inputElement.getBoundingClientRect(),this.elementPositionX=this.bounds.left,this.elementPositionY=this.bounds.top,this.elementWidth=this.bounds.width,this.elementHeight=this.bounds.height,this.elementCenterX=this.elementWidth*this.originX,this.elementCenterY=this.elementHeight*this.originY,this.elementRangeX=Math.max(this.elementCenterX,this.elementWidth-this.elementCenterX),this.elementRangeY=Math.max(this.elementCenterY,this.elementHeight-this.elementCenterY)}},{key:"queueCalibration",value:function(e){clearTimeout(this.calibrationTimer),this.calibrationTimer=setTimeout(this.onCalibrationTimer,e)}},{key:"enable",value:function(){this.enabled||(this.enabled=!0,this.orientationSupport?(this.portrait=!1,window.addEventListener("deviceorientation",this.onDeviceOrientation),this.detectionTimer=setTimeout(this.onOrientationTimer,this.supportDelay)):this.motionSupport?(this.portrait=!1,window.addEventListener("devicemotion",this.onDeviceMotion),this.detectionTimer=setTimeout(this.onMotionTimer,this.supportDelay)):(this.calibrationX=0,this.calibrationY=0,this.portrait=!1,window.addEventListener("mousemove",this.onMouseMove),this.doReadyCallback()),window.addEventListener("resize",this.onWindowResize),this.raf=r(this.onAnimationFrame))}},{key:"disable",value:function(){this.enabled&&(this.enabled=!1,this.orientationSupport?window.removeEventListener("deviceorientation",this.onDeviceOrientation):this.motionSupport?window.removeEventListener("devicemotion",this.onDeviceMotion):window.removeEventListener("mousemove",this.onMouseMove),window.removeEventListener("resize",this.onWindowResize),r.cancel(this.raf))}},{key:"calibrate",value:function(e,t){this.calibrateX=void 0===e?this.calibrateX:e,this.calibrateY=void 0===t?this.calibrateY:t}},{key:"invert",value:function(e,t){this.invertX=void 0===e?this.invertX:e,this.invertY=void 0===t?this.invertY:t}},{key:"friction",value:function(e,t){this.frictionX=void 0===e?this.frictionX:e,this.frictionY=void 0===t?this.frictionY:t}},{key:"scalar",value:function(e,t){this.scalarX=void 0===e?this.scalarX:e,this.scalarY=void 0===t?this.scalarY:t}},{key:"limit",value:function(e,t){this.limitX=void 0===e?this.limitX:e,this.limitY=void 0===t?this.limitY:t}},{key:"origin",value:function(e,t){this.originX=void 0===e?this.originX:e,this.originY=void 0===t?this.originY:t}},{key:"setInputElement",value:function(e){this.inputElement=e,this.updateDimensions()}},{key:"setPosition",value:function(e,t,n){t=t.toFixed(this.precision)+"px",n=n.toFixed(this.precision)+"px",this.transform3DSupport?s.css(e,"transform","translate3d("+t+","+n+",0)"):this.transform2DSupport?s.css(e,"transform","translate("+t+","+n+")"):(e.style.left=t,e.style.top=n)}},{key:"onOrientationTimer",value:function(){this.orientationSupport&&0===this.orientationStatus?(this.disable(),this.orientationSupport=!1,this.enable()):this.doReadyCallback()}},{key:"onMotionTimer",value:function(){this.motionSupport&&0===this.motionStatus?(this.disable(),this.motionSupport=!1,this.enable()):this.doReadyCallback()}},{key:"onCalibrationTimer",value:function(){this.calibrationFlag=!0}},{key:"onWindowResize",value:function(){this.updateDimensions()}},{key:"onAnimationFrame",value:function(){this.updateBounds();var e=this.inputX-this.calibrationX,t=this.inputY-this.calibrationY;(Math.abs(e)>this.calibrationThreshold||Math.abs(t)>this.calibrationThreshold)&&this.queueCalibration(0),this.portrait?(this.motionX=this.calibrateX?t:this.inputY,this.motionY=this.calibrateY?e:this.inputX):(this.motionX=this.calibrateX?e:this.inputX,this.motionY=this.calibrateY?t:this.inputY),this.motionX*=this.elementWidth*(this.scalarX/100),this.motionY*=this.elementHeight*(this.scalarY/100),isNaN(parseFloat(this.limitX))||(this.motionX=s.clamp(this.motionX,-this.limitX,this.limitX)),isNaN(parseFloat(this.limitY))||(this.motionY=s.clamp(this.motionY,-this.limitY,this.limitY)),this.velocityX+=(this.motionX-this.velocityX)*this.frictionX,this.velocityY+=(this.motionY-this.velocityY)*this.frictionY;for(var n=0;n<this.layers.length;n++){var i=this.layers[n],o=this.depthsX[n],a=this.depthsY[n],l=this.velocityX*(o*(this.invertX?-1:1)),u=this.velocityY*(a*(this.invertY?-1:1));this.setPosition(i,l,u)}this.raf=r(this.onAnimationFrame)}},{key:"rotate",value:function(e,t){var n=(e||0)/30,i=(t||0)/30,r=this.windowHeight>this.windowWidth;this.portrait!==r&&(this.portrait=r,this.calibrationFlag=!0),this.calibrationFlag&&(this.calibrationFlag=!1,this.calibrationX=n,this.calibrationY=i),this.inputX=n,this.inputY=i}},{key:"onDeviceOrientation",value:function(e){var t=e.beta,n=e.gamma;null!==t&&null!==n&&(this.orientationStatus=1,this.rotate(t,n))}},{key:"onDeviceMotion",value:function(e){var t=e.rotationRate.beta,n=e.rotationRate.gamma;null!==t&&null!==n&&(this.motionStatus=1,this.rotate(t,n))}},{key:"onMouseMove",value:function(e){var t=e.clientX,n=e.clientY;if(this.hoverOnly&&(t<this.elementPositionX||t>this.elementPositionX+this.elementWidth||n<this.elementPositionY||n>this.elementPositionY+this.elementHeight))return this.inputX=0,void(this.inputY=0);this.relativeInput?(this.clipRelativeInput&&(t=Math.max(t,this.elementPositionX),t=Math.min(t,this.elementPositionX+this.elementWidth),n=Math.max(n,this.elementPositionY),n=Math.min(n,this.elementPositionY+this.elementHeight)),this.elementRangeX&&this.elementRangeY&&(this.inputX=(t-this.elementPositionX-this.elementCenterX)/this.elementRangeX,this.inputY=(n-this.elementPositionY-this.elementCenterY)/this.elementRangeY)):this.windowRadiusX&&this.windowRadiusY&&(this.inputX=(t-this.windowCenterX)/this.windowRadiusX,this.inputY=(n-this.windowCenterY)/this.windowRadiusY)}},{key:"destroy",value:function(){this.disable(),clearTimeout(this.calibrationTimer),clearTimeout(this.detectionTimer),this.element.removeAttribute("style");for(var e=0;e<this.layers.length;e++)this.layers[e].removeAttribute("style");delete this.element,delete this.layers}},{key:"version",value:function(){return"3.1.0"}}]),e}();t.exports=l},{"object-assign":1,raf:4}]},{},[5])(5)},192:function(e){"undefined"!=typeof self&&self,e.exports=function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([,function(e,t,n){(function(t){for(var i=n(11),r="undefined"==typeof window?t:window,o=["moz","webkit"],s="AnimationFrame",a=r["request"+s],l=r["cancel"+s]||r["cancelRequest"+s],u=0;!a&&u<o.length;u++)a=r[o[u]+"Request"+s],l=r[o[u]+"Cancel"+s]||r[o[u]+"CancelRequest"+s];if(!a||!l){var c=0,h=0,d=[];a=function(e){if(0===d.length){var t=i(),n=Math.max(0,1e3/60-(t-c));c=n+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(c)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(n))}return d.push({handle:++h,callback:e,cancelled:!1}),h},l=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return a.call(r,e)},e.exports.cancel=function(){l.apply(r,arguments)},e.exports.polyfill=function(e){e||(e=r),e.requestAnimationFrame=a,e.cancelAnimationFrame=l}}).call(this,n(4))},,function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return X}));var i=n(1),r=n.n(i),o=function(e){return new RegExp(/<[a-z][\s\S]*>/i).test(e)},s=function(e){var t=document.createElement("div");return t.innerHTML=e,t.childNodes},a=function(e,t){return Math.floor(Math.random()*(t-e+1))+e},l="TYPE_CHARACTER",u="REMOVE_CHARACTER",c="REMOVE_ALL",h="REMOVE_LAST_VISIBLE_NODE",d="PAUSE_FOR",p="CALL_FUNCTION",f="ADD_HTML_TAG_ELEMENT",m="CHANGE_DELETE_SPEED",v="CHANGE_DELAY",y="CHANGE_CURSOR",w="PASTE_STRING",b="HTML_TAG";function g(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function T(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?g(Object(n),!0).forEach((function(t){Y(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function E(e){return function(e){if(Array.isArray(e))return C(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return C(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?C(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function C(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function S(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function Y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var X=function(){function e(t,n){var g=this;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),Y(this,"state",{cursorAnimation:null,lastFrameTime:null,pauseUntil:null,eventQueue:[],eventLoop:null,eventLoopPaused:!1,reverseCalledEvents:[],calledEvents:[],visibleNodes:[],initialOptions:null,elements:{container:null,wrapper:document.createElement("span"),cursor:document.createElement("span")}}),Y(this,"options",{strings:null,cursor:"|",delay:"natural",pauseFor:1500,deleteSpeed:"natural",loop:!1,autoStart:!1,devMode:!1,skipAddStyles:!1,wrapperClassName:"Typewriter__wrapper",cursorClassName:"Typewriter__cursor",stringSplitter:null,onCreateTextNode:null,onRemoveNode:null}),Y(this,"setupWrapperElement",(function(){g.state.elements.container&&(g.state.elements.wrapper.className=g.options.wrapperClassName,g.state.elements.cursor.className=g.options.cursorClassName,g.state.elements.cursor.innerHTML=g.options.cursor,g.state.elements.container.innerHTML="",g.state.elements.container.appendChild(g.state.elements.wrapper),g.state.elements.container.appendChild(g.state.elements.cursor))})),Y(this,"start",(function(){return g.state.eventLoopPaused=!1,g.runEventLoop(),g})),Y(this,"pause",(function(){return g.state.eventLoopPaused=!0,g})),Y(this,"stop",(function(){return g.state.eventLoop&&(Object(i.cancel)(g.state.eventLoop),g.state.eventLoop=null),g})),Y(this,"pauseFor",(function(e){return g.addEventToQueue(d,{ms:e}),g})),Y(this,"typeOutAllStrings",(function(){return"string"==typeof g.options.strings?(g.typeString(g.options.strings).pauseFor(g.options.pauseFor),g):(g.options.strings.forEach((function(e){g.typeString(e).pauseFor(g.options.pauseFor).deleteAll(g.options.deleteSpeed)})),g)})),Y(this,"typeString",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(o(e))return g.typeOutHTMLString(e,t);if(e){var n=(g.options||{}).stringSplitter,i="function"==typeof n?n(e):e.split("");g.typeCharacters(i,t)}return g})),Y(this,"pasteString",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return o(e)?g.typeOutHTMLString(e,t,!0):(e&&g.addEventToQueue(w,{character:e,node:t}),g)})),Y(this,"typeOutHTMLString",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2?arguments[2]:void 0,i=s(e);if(i.length>0)for(var r=0;r<i.length;r++){var o=i[r],a=o.innerHTML;o&&3!==o.nodeType?(o.innerHTML="",g.addEventToQueue(f,{node:o,parentNode:t}),n?g.pasteString(a,o):g.typeString(a,o)):o.textContent&&(n?g.pasteString(o.textContent,t):g.typeString(o.textContent,t))}return g})),Y(this,"deleteAll",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"natural";return g.addEventToQueue(c,{speed:e}),g})),Y(this,"changeDeleteSpeed",(function(e){if(!e)throw new Error("Must provide new delete speed");return g.addEventToQueue(m,{speed:e}),g})),Y(this,"changeDelay",(function(e){if(!e)throw new Error("Must provide new delay");return g.addEventToQueue(v,{delay:e}),g})),Y(this,"changeCursor",(function(e){if(!e)throw new Error("Must provide new cursor");return g.addEventToQueue(y,{cursor:e}),g})),Y(this,"deleteChars",(function(e){if(!e)throw new Error("Must provide amount of characters to delete");for(var t=0;t<e;t++)g.addEventToQueue(u);return g})),Y(this,"callFunction",(function(e,t){if(!e||"function"!=typeof e)throw new Error("Callbak must be a function");return g.addEventToQueue(p,{cb:e,thisArg:t}),g})),Y(this,"typeCharacters",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!e||!Array.isArray(e))throw new Error("Characters must be an array");return e.forEach((function(e){g.addEventToQueue(l,{character:e,node:t})})),g})),Y(this,"removeCharacters",(function(e){if(!e||!Array.isArray(e))throw new Error("Characters must be an array");return e.forEach((function(){g.addEventToQueue(u)})),g})),Y(this,"addEventToQueue",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return g.addEventToStateProperty(e,t,n,"eventQueue")})),Y(this,"addReverseCalledEvent",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return g.options.loop?g.addEventToStateProperty(e,t,n,"reverseCalledEvents"):g})),Y(this,"addEventToStateProperty",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3?arguments[3]:void 0,r={eventName:e,eventArgs:t||{}};return g.state[i]=n?[r].concat(E(g.state[i])):[].concat(E(g.state[i]),[r]),g})),Y(this,"runEventLoop",(function(){g.state.lastFrameTime||(g.state.lastFrameTime=Date.now());var e=Date.now(),t=e-g.state.lastFrameTime;if(!g.state.eventQueue.length){if(!g.options.loop)return;g.state.eventQueue=E(g.state.calledEvents),g.state.calledEvents=[],g.options=T({},g.state.initialOptions)}if(g.state.eventLoop=r()(g.runEventLoop),!g.state.eventLoopPaused){if(g.state.pauseUntil){if(e<g.state.pauseUntil)return;g.state.pauseUntil=null}var n,i=E(g.state.eventQueue),o=i.shift();if(!(t<=(n=o.eventName===h||o.eventName===u?"natural"===g.options.deleteSpeed?a(40,80):g.options.deleteSpeed:"natural"===g.options.delay?a(120,160):g.options.delay))){var s=o.eventName,C=o.eventArgs;switch(g.logInDevMode({currentEvent:o,state:g.state,delay:n}),s){case w:case l:var S=C.character,Y=C.node,X=document.createTextNode(S),O=X;g.options.onCreateTextNode&&"function"==typeof g.options.onCreateTextNode&&(O=g.options.onCreateTextNode(S,X)),O&&(Y?Y.appendChild(O):g.state.elements.wrapper.appendChild(O)),g.state.visibleNodes=[].concat(E(g.state.visibleNodes),[{type:"TEXT_NODE",character:S,node:O}]);break;case u:i.unshift({eventName:h,eventArgs:{removingCharacterNode:!0}});break;case d:var k=o.eventArgs.ms;g.state.pauseUntil=Date.now()+parseInt(k);break;case p:var A=o.eventArgs,x=A.cb,M=A.thisArg;x.call(M,{elements:g.state.elements});break;case f:var D=o.eventArgs,_=D.node,N=D.parentNode;N?N.appendChild(_):g.state.elements.wrapper.appendChild(_),g.state.visibleNodes=[].concat(E(g.state.visibleNodes),[{type:b,node:_,parentNode:N||g.state.elements.wrapper}]);break;case c:var R=g.state.visibleNodes,L=C.speed,P=[];L&&P.push({eventName:m,eventArgs:{speed:L,temp:!0}});for(var j=0,F=R.length;j<F;j++)P.push({eventName:h,eventArgs:{removingCharacterNode:!1}});L&&P.push({eventName:m,eventArgs:{speed:g.options.deleteSpeed,temp:!0}}),i.unshift.apply(i,P);break;case h:var H=o.eventArgs.removingCharacterNode;if(g.state.visibleNodes.length){var q=g.state.visibleNodes.pop(),W=q.type,I=q.node,Q=q.character;g.options.onRemoveNode&&"function"==typeof g.options.onRemoveNode&&g.options.onRemoveNode({node:I,character:Q}),I&&I.parentNode.removeChild(I),W===b&&H&&i.unshift({eventName:h,eventArgs:{}})}break;case m:g.options.deleteSpeed=o.eventArgs.speed;break;case v:g.options.delay=o.eventArgs.delay;break;case y:g.options.cursor=o.eventArgs.cursor,g.state.elements.cursor.innerHTML=o.eventArgs.cursor}g.options.loop&&(o.eventName===h||o.eventArgs&&o.eventArgs.temp||(g.state.calledEvents=[].concat(E(g.state.calledEvents),[o]))),g.state.eventQueue=i,g.state.lastFrameTime=e}}})),t)if("string"==typeof t){var C=document.querySelector(t);if(!C)throw new Error("Could not find container element");this.state.elements.container=C}else this.state.elements.container=t;n&&(this.options=T(T({},this.options),n)),this.state.initialOptions=T({},this.options),this.init()}var t,n;return t=e,(n=[{key:"init",value:function(){this.setupWrapperElement(),this.addEventToQueue(y,{cursor:this.options.cursor},!0),this.addEventToQueue(c,null,!0),!window||window.___TYPEWRITER_JS_STYLES_ADDED___||this.options.skipAddStyles||(function(e){var t=document.createElement("style");t.appendChild(document.createTextNode(e)),document.head.appendChild(t)}(".Typewriter__cursor{-webkit-animation:Typewriter-cursor 1s infinite;animation:Typewriter-cursor 1s infinite;margin-left:1px}@-webkit-keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}@keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}"),window.___TYPEWRITER_JS_STYLES_ADDED___=!0),!0===this.options.autoStart&&this.options.strings&&this.typeOutAllStrings().start()}},{key:"logInDevMode",value:function(e){this.options.devMode&&console.log(e)}}])&&S(t.prototype,n),e}()},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},,,,,,,function(e,t,n){(function(t){(function(){var n,i,r,o,s,a;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:null!=t&&t.hrtime?(e.exports=function(){return(n()-s)/1e6},i=t.hrtime,o=(n=function(){var e;return 1e9*(e=i())[0]+e[1]})(),a=1e9*t.uptime(),s=o-a):Date.now?(e.exports=function(){return Date.now()-r},r=Date.now()):(e.exports=function(){return(new Date).getTime()-r},r=(new Date).getTime())}).call(this)}).call(this,n(12))},function(e,t){var n,i,r=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function a(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{i="function"==typeof clearTimeout?clearTimeout:s}catch(e){i=s}}();var l,u=[],c=!1,h=-1;function d(){c&&l&&(c=!1,l.length?u=l.concat(u):h=-1,u.length&&p())}function p(){if(!c){var e=a(d);c=!0;for(var t=u.length;t;){for(l=u,u=[];++h<t;)l&&l[h].run();h=-1,t=u.length}l=null,c=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===s||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new f(e,t)),1!==u.length||c||a(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=m,r.addListener=m,r.once=m,r.off=m,r.removeListener=m,r.removeAllListeners=m,r.emit=m,r.prependListener=m,r.prependOnceListener=m,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}}]).default}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var o=t[i]={exports:{}};return e[i].call(o.exports,o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(411),t=n.n(e),i=n(192),r=n.n(i);window.addEventListener("DOMContentLoaded",(function(){var e,n,i;new(t())(document.querySelector(".portfolio__bg"),{invertX:!1,invertY:!1,selector:".bg__element"}),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||new(r())(".portfolio__heading-2",{strings:["Jakub","Computer programmer","Fullstack developer"],autoStart:!0,loop:!0,pauseFor:5e3,cursor:"_",skipAddStyles:!0}),e=document.querySelector(".menu__button"),n=document.querySelector(".navigation"),i=document.querySelector(".navigation__menu"),e.addEventListener("click",(function(){n.classList.toggle("open"),i.classList.toggle("open")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,