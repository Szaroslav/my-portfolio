/* =============== Color variables =============== */
/* =============== Gradient mixins =============== */
*,
*::before,
*::after {
  box-sizing: border-box;
}

::selection {
  background-color: rgba(105, 81, 249, 0.9);
  color: white;
}

html {
  font-size: 16px;
}

body {
  margin: 0;
  background-color: #2a2836;
  color: white;
  font-family: "Mukta", sans-serif;
  overflow-x: hidden;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

input,
textarea,
button {
  border: none;
  outline: none;
}

input,
textarea,
button,
select,
a {
  -webkit-tap-highlight-color: transparent;
}

button {
  padding: 0;
  background-color: transparent;
  cursor: pointer;
}

/* =============== Responsive containers =============== */
.container {
  width: 100%;
  max-width: 1536px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 16px;
  padding-right: 16px;
}
@media screen and (min-width: 481px) {
  .container {
    width: 95%;
  }
}
@media screen and (min-width: 769px) {
  .container {
    width: 90%;
  }
}
@media screen and (min-width: 1025px) {
  .container {
    width: 85%;
  }
}
@media screen and (min-width: 1281px) {
  .container {
    width: 80%;
  }
}

.container-lg {
  width: 100%;
  max-width: 1728px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 16px;
  padding-right: 16px;
}
@media screen and (min-width: 481px) {
  .container-lg {
    width: 95%;
  }
}
@media screen and (min-width: 1281px) {
  .container-lg {
    width: 90%;
  }
}

/* =============== Fluid typography =============== */
.header__bg {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
.header__bg .bg--turquoise {
  background-image: linear-gradient(135deg, #7be2f7, #25c4ec);
}
.header__bg .bg--dark-purple {
  background-image: linear-gradient(135deg, #b8adfa, #6951f9);
}
.header__bg .bg--purple {
  background-image: linear-gradient(135deg, #afc7fa, #a621de);
}
.header__bg .bg--rose {
  background-image: linear-gradient(135deg, #eaa1fc, #de2068);
}
.header__bg .bg__wrapper {
  position: absolute;
}
.header__bg .bg__wrapper .bg__element {
  width: 100%;
  height: 100%;
  outline: 1px solid transparent;
  backface-visibility: hidden;
}
.header__bg .bg__wrapper:nth-child(1) {
  width: 150px;
  height: 150px;
  top: 100px;
  left: 100px;
  transform: rotateZ(20deg);
}
.header__bg .bg__wrapper:nth-child(2) {
  width: 500px;
  height: 500px;
  top: -130px;
  right: -40px;
  transform: rotateZ(75deg);
}
.header__bg .bg__wrapper:nth-child(3) {
  width: 100px;
  height: 100px;
  bottom: 120px;
  right: 350px;
  transform: rotateZ(-12deg);
}
.header__bg .bg__wrapper:nth-child(4) {
  width: 400px;
  height: 400px;
  bottom: -45px;
  left: -100px;
  transform: rotateZ(65deg);
}
.header__bg .bg__wrapper:nth-child(5) {
  width: 90px;
  height: 90px;
  bottom: 100px;
  left: 500px;
  transform: rotateZ(45deg);
}
.header__bg .bg__wrapper:nth-child(1) {
  z-index: 1;
}
.header__bg .bg__wrapper:nth-child(2) {
  z-index: 2;
}
.header__bg .bg__wrapper:nth-child(3) {
  z-index: 3;
}
.header__bg .bg__wrapper:nth-child(4) {
  z-index: 4;
}
.header__bg .bg__wrapper:nth-child(5) {
  z-index: 5;
}
@media screen and (max-width: 992px) {
  .header__bg .bg__wrapper:nth-child(1) {
    width: 70px;
    height: 70px;
    top: 100px;
    left: 50px;
  }
  .header__bg .bg__wrapper:nth-child(2) {
    width: 200px;
    height: 200px;
    top: -80px;
    right: -20px;
  }
  .header__bg .bg__wrapper:nth-child(3) {
    width: 60px;
    height: 60px;
    bottom: 100px;
    right: 80px;
  }
  .header__bg .bg__wrapper:nth-child(4) {
    width: 200px;
    height: 200px;
    bottom: -60px;
    left: -50px;
  }
  .header__bg .bg__wrapper:nth-child(5) {
    display: none;
  }
}
@media screen and (max-width: 1366px) {
  .header__bg .bg__wrapper:nth-child(1) {
    width: 120px;
    height: 120px;
    top: 100px;
    left: 100px;
  }
  .header__bg .bg__wrapper:nth-child(2) {
    width: 400px;
    height: 400px;
    top: -130px;
    right: -40px;
  }
  .header__bg .bg__wrapper:nth-child(3) {
    width: 90px;
    height: 90px;
    bottom: 120px;
    right: 100px;
  }
  .header__bg .bg__wrapper:nth-child(4) {
    width: 300px;
    height: 300px;
    bottom: -45px;
    left: -100px;
  }
  .header__bg .bg__wrapper:nth-child(5) {
    width: 80px;
    height: 80px;
    bottom: 100px;
    left: 400px;
  }
}

.portfolio-header {
  height: 100vh;
  min-height: 580px;
  position: relative;
}
.portfolio-header .header__headings {
  font-family: "Montserrat", sans-serif;
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 1;
  transform: translate(-50%, -50%);
  text-align: center;
  text-transform: uppercase;
}
.portfolio-header .header__heading-1 {
  font-size: 44px;
}
@media screen and (min-width: 320px) {
  .portfolio-header .header__heading-1 {
    font-size: calc(44px + 52 * ((100vw - 320px) / 1600));
  }
}
@media screen and (min-width: 1920px) {
  .portfolio-header .header__heading-1 {
    font-size: 96px;
  }
}
.portfolio-header .header__heading-2 {
  font-weight: 300;
}
.portfolio-header .header__heading-2 {
  font-size: 30px;
}
@media screen and (min-width: 320px) {
  .portfolio-header .header__heading-2 {
    font-size: calc(30px + 34 * ((100vw - 320px) / 1600));
  }
}
@media screen and (min-width: 1920px) {
  .portfolio-header .header__heading-2 {
    font-size: 64px;
  }
}
.portfolio-header .header__social-media {
  display: flex;
  position: absolute;
  bottom: 24px;
  left: 50%;
  transform: translateX(-50%);
}
.portfolio-header .header__social-media .social-media__link {
  display: block;
  width: 36px;
  height: 36px;
  margin-right: 12px;
}
.portfolio-header .header__social-media .social-media__link:last-child {
  margin-right: 0;
}
.portfolio-header .header__social-media .social-media__link > svg {
  fill: white;
  transition: fill 0.25s ease;
}
.portfolio-header .header__social-media .social-media__link:hover.social-media--github > svg {
  fill: #6951f9;
}
.portfolio-header .header__social-media .social-media__link:hover.social-media--linkedin > svg {
  fill: #0a66c2;
}
.portfolio-header .header__social-media .social-media__link:hover.social-media--facebook > svg {
  fill: #1096f4;
}
.portfolio-header .Typewriter__cursor {
  animation: 0.5s steps(2, jump-start) infinite alternate cursor-anim;
}
@keyframes cursor-anim {
  from {
    visibility: visible;
  }
  to {
    visibility: hidden;
  }
}
.portfolio-header .console__button {
  width: 32px;
  position: absolute;
  bottom: 24px;
  right: 24px;
}
.portfolio-header .console__button svg {
  fill: white;
}

main.portfolio {
  overflow-x: hidden;
}

.portfolio-section {
  padding-top: 64px;
  padding-bottom: 64px;
}

.portfolio-heading {
  display: inline-block;
  margin-bottom: 0.5em;
  padding-right: 0.25em;
  font-family: "Montserrat", sans-serif;
  font-weight: 800;
  position: relative;
  z-index: 1;
  cursor: default;
  text-transform: uppercase;
}
.portfolio-heading {
  font-size: 40px;
}
@media screen and (min-width: 320px) {
  .portfolio-heading {
    font-size: calc(40px + 24 * ((100vw - 320px) / 1600));
  }
}
@media screen and (min-width: 1920px) {
  .portfolio-heading {
    font-size: 64px;
  }
}
.portfolio-heading::after {
  content: "";
  display: block;
  width: 2em;
  height: 100%;
  background-color: #6951f9;
  position: absolute;
  top: 0;
  right: 0;
  z-index: -1;
  backface-visibility: hidden;
  transform-origin: right;
  transition: transform 0.2s ease;
}
.portfolio-heading:hover::after {
  transform: scaleX(1.25);
}
.portfolio-heading.portfolio-heading--turquoise::after {
  background-color: #25c4ec;
}
.portfolio-heading.portfolio-heading--dark-purple::after {
  background-color: #6951f9;
}
.portfolio-heading.portfolio-heading--purple::after {
  background-color: #a621de;
}
.portfolio-heading.portfolio-heading--rose::after {
  background-color: #de2068;
}

.portfolio-text {
  margin: 0.75rem 0;
  color: #afadbb;
  font-weight: 300;
  line-height: 1.2;
}
.portfolio-text {
  font-size: 16px;
}
@media screen and (min-width: 320px) {
  .portfolio-text {
    font-size: calc(16px + 2 * ((100vw - 320px) / 1600));
  }
}
@media screen and (min-width: 1920px) {
  .portfolio-text {
    font-size: 18px;
  }
}

.navigation {
  width: 100%;
  padding-top: 24px;
  padding-bottom: 24px;
  font-family: "Mukta", sans-serif;
  font-size: 1rem;
  font-weight: 500;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2;
}
.navigation__container {
  display: flex;
}
.navigation__menu {
  margin-left: auto;
}
.navigation__menu .menu__content {
  display: flex;
  margin: 0;
  padding: 0;
  list-style-type: none;
}
.navigation__menu .menu__content .menu__item {
  margin-right: 32px;
}
.navigation__menu .menu__content .menu__item:last-child {
  margin-right: 0;
}
.navigation__menu .menu__content .menu__link {
  display: inline-block;
  position: relative;
}
.navigation__menu .menu__content .menu__link {
  padding: 4px;
}
.navigation__menu .menu__content .menu__link::after {
  width: calc(100% - 2 * 4px);
  left: 4px;
}
.navigation__menu .menu__content .menu__link::after {
  content: "";
  display: inline-block;
  height: 2px;
  background-color: white;
  position: absolute;
  bottom: 2px;
  transform: scaleX(0);
  transform-origin: center;
  transition: transform 0.25s ease;
}
.navigation__menu .menu__content .menu__link:hover::after {
  transform: scaleX(1);
}
.navigation .menu__button {
  display: none;
  margin-left: auto;
  position: relative;
  z-index: 5;
  transition: transform 0.1s ease;
}
.navigation .menu__button .button__line {
  display: block;
  width: 30px;
  height: 3px;
  margin-bottom: 7px;
  background-color: white;
  transition: transform 0.2s ease;
  transform-origin: left;
  outline: 1px solid transparent;
}
.navigation .menu__button .button__line:last-child {
  margin-bottom: 0;
}
.navigation .menu__button .button__line:nth-child(2) {
  width: 24px;
  margin-left: auto;
}
.navigation.open .menu__button .button__line:nth-child(1) {
  transform: rotateZ(36deg) scaleX(1.12);
}
.navigation.open .menu__button .button__line:nth-child(2) {
  transform: scaleX(0);
}
.navigation.open .menu__button .button__line:nth-child(3) {
  transform: rotateZ(-36deg) scaleX(1.12);
}
@media screen and (max-width: 992px) {
  .navigation__menu {
    width: 100%;
    height: 100vh;
    min-height: 350px;
    margin-left: 0;
    font-size: 20px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    visibility: hidden;
    opacity: 0;
    transition: visibility 0.2s ease, opacity 0.2s ease;
  }
  .navigation__menu::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    background-color: rgba(42, 40, 54, 0.9875);
    position: absolute;
    top: 0;
    left: 0;
    transform: scaleY(0);
    transform-origin: top;
    transition: transform 0.5s ease, opacity 0.4s ease;
    opacity: 0.5;
  }
  .navigation__menu .menu__content {
    flex-direction: column;
    align-items: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .navigation__menu .menu__content .menu__item {
    margin-right: 0;
    margin-bottom: 12px;
    transform: translateY(-10px);
    visibility: hidden;
    opacity: 0;
    transition: all 0.2s ease 0;
  }
  .navigation__menu .menu__content .menu__item:last-child {
    margin-bottom: 0;
  }
  .navigation__menu .menu__content .menu__link {
    padding: 12px;
  }
  .navigation__menu .menu__content .menu__link::after {
    width: calc(100% - 2 * 12px);
    left: 12px;
  }
  .navigation__menu.open {
    visibility: visible;
    opacity: 1;
    transition: unset;
  }
  .navigation__menu.open::before {
    transform: scaleY(1);
    opacity: 1;
  }
  .navigation__menu.open .menu__item {
    transform: translateY(0);
    visibility: visible;
    opacity: 1;
    transition: all 0.3s ease;
  }
  .navigation__menu.open .menu__item:nth-child(1) {
    transition-delay: 0.225s;
  }
  .navigation__menu.open .menu__item:nth-child(2) {
    transition-delay: 0.35s;
  }
  .navigation__menu.open .menu__item:nth-child(3) {
    transition-delay: 0.475s;
  }
  .navigation__menu.open .menu__item:nth-child(4) {
    transition-delay: 0.6s;
  }
  .navigation__menu.open .menu__item:nth-child(5) {
    transition-delay: 0.725s;
  }
  .navigation__menu.open .menu__item:nth-child(6) {
    transition-delay: 0.85s;
  }
  .navigation__menu.open .menu__item:nth-child(7) {
    transition-delay: 0.975s;
  }
  .navigation__menu.open .menu__item:nth-child(8) {
    transition-delay: 1.1s;
  }
  .navigation__menu.open .menu__item:nth-child(9) {
    transition-delay: 1.225s;
  }
  .navigation__menu.open .menu__item:nth-child(10) {
    transition-delay: 1.35s;
  }
  .navigation .menu__button {
    display: inline-block;
  }
}

.portfolio__about {
  display: flex;
  position: relative;
  z-index: 1;
}
.portfolio__about .about__content {
  width: 70%;
  margin: 32px 0;
  margin-right: 3em;
}
.portfolio__about .about__content .portfolio-text:first-of-type {
  margin-top: 0;
}
.portfolio__about .about__content .portfolio-text:last-of-type {
  margin-bottom: 0;
}
.portfolio__about .about__skills {
  flex: 1;
}
.portfolio__about .about__skills .skills__list {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  font-family: "Montserrat", sans-serif;
  font-weight: 600;
  gap: 16px;
  list-style-type: none;
}
.portfolio__about .about__skills .skills__list {
  font-size: 14px;
}
@media screen and (min-width: 320px) {
  .portfolio__about .about__skills .skills__list {
    font-size: calc(14px + 2 * ((100vw - 320px) / 1600));
  }
}
@media screen and (min-width: 1920px) {
  .portfolio__about .about__skills .skills__list {
    font-size: 16px;
  }
}
.portfolio__about .about__skills .skills__skill {
  width: 100%;
  padding: 32px 16px;
  padding-bottom: 40px;
  background-color: #312f40;
  box-shadow: 0 4px 6px 3px rgba(0, 0, 0, 0.05);
  position: relative;
  text-align: center;
  text-transform: uppercase;
  transition: all 0.3s ease;
}
.portfolio__about .about__skills .skills__skill::after {
  content: "";
  display: block;
  width: 100%;
  height: 8px;
  background-image: linear-gradient(to left, #b8adfa, #6951f9);
  position: absolute;
  bottom: 0;
  right: 0;
}
.portfolio__about .about__skills .skills__skill:hover {
  box-shadow: 0 4px 12px 5px rgba(0, 0, 0, 0.2);
}
@media screen and (max-width: 1279px) {
  .portfolio__about .about__content {
    width: 60%;
  }
}
@media screen and (max-width: 768px) {
  .portfolio__about {
    flex-direction: column;
  }
  .portfolio__about .about__content {
    width: 100%;
  }
  .portfolio__about .about__skills .skills__list {
    gap: 8px;
  }
  .portfolio__about .about__skills .skills__list .skills__skill {
    width: calc((100% - 8px) / 2);
  }
  .portfolio__about .about__skills .skills__list .skills__skill:nth-child(2n)::after {
    background-image: linear-gradient(to right, #b8adfa, #6951f9);
  }
}
@media screen and (max-width: 480px) {
  .portfolio__about .about__skills .skills__list {
    gap: 8px;
  }
  .portfolio__about .about__skills .skills__list .skills__skill {
    width: 100%;
  }
  .portfolio__about .about__skills .skills__list .skills__skill:nth-child(2n)::after {
    background-image: linear-gradient(to left, #b8adfa, #6951f9);
  }
}

.portfolio__skills .skills__list {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  font-family: "Montserrat", sans-serif;
  gap: 16px;
  list-style-type: none;
}
.portfolio__skills .skills__list {
  font-size: 12px;
}
@media screen and (min-width: 320px) {
  .portfolio__skills .skills__list {
    font-size: calc(12px + 4 * ((100vw - 320px) / 1600));
  }
}
@media screen and (min-width: 1920px) {
  .portfolio__skills .skills__list {
    font-size: 16px;
  }
}
.portfolio__skills .skills__skill {
  width: calc((100% - 32px) / 3);
  padding: 16px;
  background-color: #312f40;
  border: 1px solid #4b4861;
  box-shadow: 0 4px 6px 3px rgba(0, 0, 0, 0.05);
  position: relative;
}
.portfolio__skills .skills__skill::after {
  content: "";
  display: block;
  width: 15%;
  min-width: 42px;
  height: calc(100% + 2px);
  background-image: linear-gradient(-135deg, #b8adfa, #6951f9);
  position: absolute;
  top: -1px;
  right: 0;
}
@media screen and (max-width: 1279px) {
  .portfolio__skills .skills__skill {
    width: calc((100% - 16px) / 2);
  }
}
@media screen and (max-width: 480px) {
  .portfolio__skills .skills__list {
    gap: 10px;
  }
  .portfolio__skills .skills__list .skills__skill {
    width: 100%;
  }
}

.portfolio__my-work .my-work__projects,
.portfolio__my-work .project__tags {
  margin: 0;
  padding: 0;
  list-style-type: none;
}
.portfolio__my-work .project__wrapper {
  position: relative;
}
.portfolio__my-work .my-work__project {
  padding: 64px 0;
  position: relative;
  text-align: right;
  background-image: url(3dc3ad869096e4d18b1f.jpg);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}
.portfolio__my-work .my-work__project:nth-child(2n) {
  text-align: left;
}
.portfolio__my-work .my-work__project::before {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  background-color: #2a2836;
  position: absolute;
  top: 0;
  left: 0;
  visibility: visible;
  opacity: 1;
  transition: opacity 0.3s ease;
}
.portfolio__my-work .my-work__project:hover::before {
  opacity: 0.35;
}
.portfolio__my-work .my-work__project:hover .project__description {
  color: white;
}
.portfolio__my-work .project__title {
  font-family: "Montserrat", sans-serif;
  font-weight: 800;
}
.portfolio__my-work .project__title {
  font-size: 30px;
}
@media screen and (min-width: 320px) {
  .portfolio__my-work .project__title {
    font-size: calc(30px + 14 * ((100vw - 320px) / 1600));
  }
}
@media screen and (min-width: 1920px) {
  .portfolio__my-work .project__title {
    font-size: 44px;
  }
}
.portfolio__my-work .project__description {
  transition: color 0.2s ease;
}
.portfolio__my-work .project__tags {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
}
.portfolio__my-work .project__tags .project__tag {
  margin-right: 8px;
  padding: 8px;
  background-color: #25c4ec;
}
.portfolio__my-work .project__tags .project__tag:last-child {
  margin-right: 0;
}
@media screen and (max-width: 768px) {
  .portfolio__my-work .my-work__project {
    padding: 128px 0;
  }
  .portfolio__my-work .my-work__project, .portfolio__my-work .my-work__project:nth-child(2n) {
    text-align: center;
  }
  .portfolio__my-work .my-work__project::before {
    opacity: 0.35;
  }
  .portfolio__my-work .project__description {
    color: white;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/